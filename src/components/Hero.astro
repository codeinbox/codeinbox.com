---
import Container from './Container.astro';
import PhoneFrame from './PhoneFrame.astro';


// Generate unique IDs for SVG elements
const backgroundId1 = `gradient-${Math.random().toString(36).substring(2, 9)}`;
const backgroundId2 = `gradient-${Math.random().toString(36).substring(2, 9)}`;

const notifications = [
  { channel: 'Slack', handle: '@claude', description: 'Claude needs your permission to use Bash', time: '11:33' },
  { channel: 'Slack', handle: '@claude', description: 'Claude needs your permission to edit ~/.bashrc', time: '11:35' },
  { channel: 'Slack', handle: '@claude', description: "Claude needs a break.", time: '11:37' },
]
---

<div class="overflow-hidden py-20 sm:py-32 lg:pb-32 xl:pb-36">
  <Container>
    <div class="lg:grid lg:grid-cols-12 lg:gap-x-8 lg:gap-y-20">
      <div class="relative z-10 mx-auto max-w-2xl lg:col-span-7 lg:max-w-none lg:pt-6 xl:col-span-6">
        <h1 class="text-4xl font-medium tracking-tight text-gray-900">
          Bring Claude to Slack
        </h1>
        <p class="mt-6 text-lg text-gray-600">
          Turn Claude Code hooks into Slack notifications your team actually sees them. Powered by MagicBell.
        </p>
      </div>
      <div class="relative mt-10 sm:mt-20 lg:col-span-5 lg:row-span-2 lg:mt-0 xl:col-span-6">
        <!-- BackgroundIllustration -->
        <div class="absolute top-4 left-1/2 h-[1026px] w-[1026px] -translate-x-1/3 mask-[linear-gradient(to_bottom,white_20%,transparent_75%)] stroke-gray-300/70 sm:top-16 sm:-translate-x-1/2 lg:-top-16 lg:ml-12 xl:-top-14 xl:ml-0">
          <svg
            viewBox="0 0 1026 1026"
            fill="none"
            aria-hidden="true"
            class="absolute inset-0 h-full w-full animate-spin-slow"
          >
            <path
              d="M1025 513c0 282.77-229.23 512-512 512S1 795.77 1 513 230.23 1 513 1s512 229.23 512 512Z"
              stroke="#D4D4D4"
              stroke-opacity="0.7"
            />
            <path
              d="M513 1025C230.23 1025 1 795.77 1 513"
              stroke={`url(#${backgroundId1})`}
              stroke-linecap="round"
            />
            <defs>
              <linearGradient
                id={backgroundId1}
                x1="1"
                y1="513"
                x2="1"
                y2="1025"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#06b6d4" />
                <stop offset="1" stop-color="#06b6d4" stop-opacity="0" />
              </linearGradient>
            </defs>
          </svg>
          <svg
            viewBox="0 0 1026 1026"
            fill="none"
            aria-hidden="true"
            class="absolute inset-0 h-full w-full animate-spin-reverse-slower"
          >
            <path
              d="M913 513c0 220.914-179.086 400-400 400S113 733.914 113 513s179.086-400 400-400 400 179.086 400 400Z"
              stroke="#D4D4D4"
              stroke-opacity="0.7"
            />
            <path
              d="M913 513c0 220.914-179.086 400-400 400"
              stroke={`url(#${backgroundId2})`}
              stroke-linecap="round"
            />
            <defs>
              <linearGradient
                id={backgroundId2}
                x1="913"
                y1="513"
                x2="913"
                y2="913"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#06b6d4" />
                <stop offset="1" stop-color="#06b6d4" stop-opacity="0" />
              </linearGradient>
            </defs>
          </svg>
        </div>
        <div class="-mx-4 h-[448px] mask-[linear-gradient(to_bottom,white_60%,transparent)] px-9 sm:mx-0 lg:absolute lg:-inset-x-10 lg:-top-10 lg:-bottom-20 lg:h-auto lg:px-0 lg:pt-10 xl:-bottom-32">
          <PhoneFrame class="mx-auto max-w-[366px]" priority={true}>
            <!-- Simplified placeholder for AppDemo -->
            <div class="flex flex-col bg-gray-900 h-full">
              <div class="p-4 text-white">
                <div class="text-center pt-8">
                  <div id="phone-time" class="text-6xl font-light opacity-75">19:05</div>
                  <div id="phone-date" class="text-md opacity-60 mt-2">Thursday, July 3</div>
                </div>
              </div>

              <div id="phone-notifications" class="px-2">
                {notifications.map((noti) => (
                  <div class="flex flex-row p-4 text-white font-normal">
                    <img src={`/images/logos/${noti.channel.toLowerCase()}.svg`} class="w-8 h-8" />
                    <div class="flex flex-col ml-4">
                      <div class="font-bold">{noti.channel}<span class="ml-2 opacity-75 text-xs font-normal">now</span></div>
                      <div><strong class="font-bold">@CodeInbox:</strong>{' '}{noti.description}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </PhoneFrame>
        </div>
      </div>
    </div>
  </Container>
</div>

<style>
  /* Add any necessary animation styles */
  .animate-spin-slow {
    animation: spin 60s linear infinite;
  }

  .animate-spin-reverse-slower {
    animation: spin-reverse 80s linear infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes spin-reverse {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(-360deg);
    }
  }
</style>
