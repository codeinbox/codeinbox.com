---
import { Button } from './Button.astro';
import { Container } from './Container.astro';
import { Logomark } from './Logo.astro';

const plans = [
  {
    name: 'Starter',
    featured: false,
    price: { Monthly: '$0', Annually: '$0' },
    description:
      "You're new to investing but want to do it right. Get started for free.",
    button: {
      label: 'Get started for free',
      href: '/register',
    },
    features: [
      'Commission-free trading',
      'Multi-layered encryption',
      'One tip every day',
      'Invest up to $1,500 each month',
    ],
    logomarkClassName: 'fill-gray-300',
  },
  {
    name: 'Investor',
    featured: false,
    price: { Monthly: '$7', Annually: '$70' },
    description:
      "You've been investing for a while. Invest more and grow your wealth faster.",
    button: {
      label: 'Subscribe',
      href: '/register',
    },
    features: [
      'Commission-free trading',
      'Multi-layered encryption',
      'One tip every hour',
      'Invest up to $15,000 each month',
      'Basic transaction anonymization',
    ],
    logomarkClassName: 'fill-gray-500',
  },
  {
    name: 'VIP',
    featured: true,
    price: { Monthly: '$199', Annually: '$1,990' },
    description:
      "You've got a huge amount of assets but it's not enough. To the moon.",
    button: {
      label: 'Subscribe',
      href: '/register',
    },
    features: [
      'Commission-free trading',
      'Multi-layered encryption',
      'Real-time tip notifications',
      'No investment limits',
      'Advanced transaction anonymization',
      'Automated tax-loss harvesting',
    ],
    logomarkClassName: 'fill-cyan-500',
  },
];

// Default to Monthly pricing
const activePeriod = 'Monthly';
---

<section
  id="pricing"
  aria-labelledby="pricing-title"
  class="border-t border-gray-200 bg-gray-100 py-20 sm:py-32"
>
  <Container>
    <div class="mx-auto max-w-2xl text-center">
      <h2
        id="pricing-title"
        class="text-3xl font-medium tracking-tight text-gray-900"
      >
        Flat pricing, no management fees.
      </h2>
      <p class="mt-2 text-lg text-gray-600">
        Whether you're one person trying to get ahead or a big firm trying
        to take over the world, we've got a plan for you.
      </p>
    </div>

    <div class="mt-8 flex justify-center">
      <div class="relative">
        <div class="grid grid-cols-2">
          <div class="cursor-pointer border border-gray-300 px-[calc(--spacing(3)-1px)] py-[calc(--spacing(2)-1px)] text-sm text-gray-700 transition-colors hover:border-gray-400 rounded-l-lg bg-cyan-500 text-white font-semibold">
            Monthly
          </div>
          <div class="cursor-pointer border border-gray-300 px-[calc(--spacing(3)-1px)] py-[calc(--spacing(2)-1px)] text-sm text-gray-700 transition-colors hover:border-gray-400 -ml-px rounded-r-lg">
            Annually
          </div>
        </div>
      </div>
    </div>

    <div class="mx-auto mt-16 grid max-w-2xl grid-cols-1 items-start gap-x-8 gap-y-10 sm:mt-20 lg:max-w-none lg:grid-cols-3">
      {plans.map((plan) => (
        <section
          class:list={[
            'flex flex-col overflow-hidden rounded-3xl p-6 shadow-lg shadow-gray-900/5',
            plan.featured ? 'order-first bg-gray-900 lg:order-none' : 'bg-white',
          ]}
        >
          <h3
            class:list={[
              'flex items-center text-sm font-semibold',
              plan.featured ? 'text-white' : 'text-gray-900',
            ]}
          >
            <Logomark class:list={['h-6 w-6 flex-none', plan.logomarkClassName]} />
            <span class="ml-4">{plan.name}</span>
          </h3>
          <p
            class:list={[
              'relative mt-5 flex text-3xl tracking-tight',
              plan.featured ? 'text-white' : 'text-gray-900',
            ]}
          >
            {plan.price[activePeriod]}
          </p>
          <p
            class:list={[
              'mt-3 text-sm',
              plan.featured ? 'text-gray-300' : 'text-gray-700',
            ]}
          >
            {plan.description}
          </p>
          <div class="order-last mt-6">
            <ul
              role="list"
              class:list={[
                '-my-2 divide-y text-sm',
                plan.featured
                  ? 'divide-gray-800 text-gray-300'
                  : 'divide-gray-200 text-gray-700',
              ]}
            >
              {plan.features.map((feature) => (
                <li class="flex py-2">
                  <svg
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                    class:list={[
                      'h-6 w-6 flex-none',
                      plan.featured ? 'text-white' : 'text-cyan-500',
                    ]}
                  >
                    <path
                      d="M9.307 12.248a.75.75 0 1 0-1.114 1.004l1.114-1.004ZM11 15.25l-.557.502a.75.75 0 0 0 1.15-.043L11 15.25Zm4.844-5.041a.75.75 0 0 0-1.188-.918l1.188.918Zm-7.651 3.043 2.25 2.5 1.114-1.004-2.25-2.5-1.114 1.004Zm3.4 2.457 4.25-5.5-1.187-.918-4.25 5.5 1.188.918Z"
                      fill="currentColor"
                    />
                    <circle
                      cx="12"
                      cy="12"
                      r="8.25"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="1.5"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    />
                  </svg>
                  <span class="ml-4">{feature}</span>
                </li>
              ))}
            </ul>
          </div>
          <Button
            href={plan.button.href}
            color={plan.featured ? 'cyan' : 'gray'}
            class="mt-6"
            aria-label={`Get started with the ${plan.name} plan for ${plan.price[activePeriod]}`}
          >
            {plan.button.label}
          </Button>
        </section>
      ))}
    </div>
  </Container>
</section>

<script>
  // Add client-side interactivity for pricing toggle if needed
  document.addEventListener('DOMContentLoaded', () => {
    const monthlyButton = document.querySelector('.grid-cols-2 div:first-child');
    const annuallyButton = document.querySelector('.grid-cols-2 div:last-child');

    if (monthlyButton && annuallyButton) {
      monthlyButton.addEventListener('click', () => {
        monthlyButton.classList.add('bg-cyan-500', 'text-white', 'font-semibold');
        annuallyButton.classList.remove('bg-cyan-500', 'text-white', 'font-semibold');

        // In a real implementation, you would update the prices here
        // This is just a placeholder for demonstration
      });

      annuallyButton.addEventListener('click', () => {
        annuallyButton.classList.add('bg-cyan-500', 'text-white', 'font-semibold');
        monthlyButton.classList.remove('bg-cyan-500', 'text-white', 'font-semibold');

        // In a real implementation, you would update the prices here
        // This is just a placeholder for demonstration
      });
    }
  });
</script>
